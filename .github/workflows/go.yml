name: Go

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Run Linter
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: lint
        uses: golangci/golangci-lint-action@v4.0.0
        with:
          version: latest
          # skip cache because of flaky behaviors
          skip-build-cache: true
          skip-pkg-cache: true

  unit-test:
    runs-on: ubuntu-latest
    name: Run Unit Tests
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: db_service
          MYSQL_USER: go_service
          MYSQL_PASSWORD: go_service
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -ugo_service -pgo_service"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run tests
        run: make test
      - name: Upload coverage report
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ env.CODECOV_TOKEN }}
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Build
        run: go build -v ./...
